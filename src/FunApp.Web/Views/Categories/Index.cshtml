@using X.PagedList.Mvc.Core; //import this so we get our HTML Helper
@using X.PagedList; //import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)

@model FunApp.Services.Models.Home.IndexViewModel

<div class="col-lg-9">
    @foreach (var joke in Model.Jokes)
    {
        <div class="panel panel-default">
            <div class="panel-body">
                @Html.Raw(joke.HtmlContent)
            </div>

            <div class="panel-footer">
                <h5>Category: @joke.CategoryName</h5>

                <a class="btn btn-primary btn-group-sm" asp-controller="Jokes" asp-action="Details" asp-route-id="@joke.Id">View</a>
            </div>
        </div>
    }
</div>

<div class="col-lg-3">
    <h1>Categories</h1>

    <ol class="list-unstyled">
        @foreach (var category in Model.Categories)
        {
            <li>
                <h4>
                    <a asp-controller="Categories" asp-action="Index" asp-route-id="@category.Id">@category.Name</a>
                </h4>
            </li>
        }
    </ol>
</div>

@Html.PagedListPager((IPagedList)Model.Jokes, page => Url.Action("Index", new { page }))


